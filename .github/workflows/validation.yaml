name: validate version

on: 
  pull_request:
    types: [opened, synchronize]
    paths:
      - "**/template.yaml"
      - "**/cargo.toml"
jobs:
  upload_files:
    runs-on: ubuntu-latest
    name: upload files
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 
      - name: check versions
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git pull origin master
          echo pull
          git fetch origin
          echo fetch
          echo branch_name_${{ github.head_ref }}
          git checkout ${{ github.head_ref }}
          cargo_version=$(cat aws-integrations/aws-shipper-lambda/crago.toml | grep "version" | head -1 | awk -F '"' '{print $2}')
          template_version=$(cat aws-integrations/aws-shipper-lambda/template.yaml | grep "SemanticVersion" | grep -oE '[^ ]+$')
          echo $cargo_version
          echo $template_version
          if [[ "$cargo_version" != "$template_version" ]];then
            echo "not the same version"
            IFS='.' read -ra v1 <<< "$cargo_version"
            IFS='.' read -ra v2 <<< "$template_version"

            # Compare each component
            for i in {0..2}; do
              if [ "${v1[i]}" -lt "${v2[i]}" ]; then
                echo "$template_version is greater than $cargo_version"
                break
              elif [ "${v1[i]}" -gt "${v2[i]}" ]; then
                echo "$cargo_version is greater than $template_version"
                break
              fi
            done
          else
            echo "the same version"
          fi

      # - name: update the version
      #   uses: planetscale/ghcommit-action@v0.1.19
      #   with:
      #     commit_message: "Copy file from cloudformation repository"
      #     repo: guyrenny/test
      #     branch: ${{env.branch_name}}
      #     file_pattern: '*.yaml *.toml'
      #   env:
      #     GITHUB_TOKEN: ${{secrets.DESTINATION_REPO_TOKEN}}